[
  {
    "name": "if",
    "id": 1,
    "type": "Functions",
    "description": "Returns the first value if the condition is true; otherwise, returns the second value.",
    "category": "Conditional",
    "accepts": "Boolean",
    "returns": "All Data Types",
    "iconAccepts": "boolean.svg",
    "iconReturns": "various.svg",
    "other": "? :",
    "examples": "if(true, 1, 2)\t/* => 1 */\n```\n\n```js\ntrue.if(1, 2)\t/* => 1 */",
    "exampleBasic": "if(true, 1, 2)",
    "link": "e3fcf03c5c98451181958ba7eb58214f",
    "new": ""
  },
  {
    "name": "ifs",
    "id": 2,
    "type": "Functions",
    "description": "Returns the value that corresponds to the first true condition. This can be used as an alternative to multiple nested `if` statements.",
    "category": "Conditional",
    "accepts": "Boolean",
    "returns": "All Data Types",
    "iconAccepts": "boolean.svg",
    "iconReturns": "various.svg",
    "other": "",
    "examples": "ifs(true, 1, true, 2, 3)\t/* => 1 */\n```\n\n```js\ntrue.ifs(1, true, 2, 3)\t/* => 1 */",
    "exampleBasic": "ifs(true, 1, true, 2, 3)",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "and",
    "id": 3,
    "type": "Functions",
    "description": "The boolean operator and.",
    "category": "Logical",
    "accepts": "Boolean",
    "returns": "Boolean",
    "iconAccepts": "boolean.svg",
    "iconReturns": "boolean.svg",
    "other": "",
    "examples": "and(true, true, true)\t/* => true */\n```\n\n```js\ntrue.and(true, true)\t/* => true */",
    "exampleBasic": "and(true, true, true)",
    "link": "",
    "new": ""
  },
  {
    "name": "or",
    "id": 4,
    "type": "Functions",
    "description": "The boolean operator or.",
    "category": "Logical",
    "accepts": "Boolean",
    "returns": "Boolean",
    "iconAccepts": "boolean.svg",
    "iconReturns": "boolean.svg",
    "other": "",
    "examples": "or(true, false, false)\t/* => true */\n```\n\n```js\ntrue.or(false, false)\t/* => true */",
    "exampleBasic": "or(true, false, false)",
    "link": "",
    "new": ""
  },
  {
    "name": "empty",
    "id": 5,
    "type": "Functions",
    "description": "Returns true if the value is empty. `0`, `\"\"`, `false`, and `[]` are considered empty.",
    "category": "Checking",
    "accepts": "All Data Types",
    "returns": "Boolean",
    "iconAccepts": "various.svg",
    "iconReturns": "boolean.svg",
    "other": "",
    "examples": "empty(0)\t/* => true */\n```\n\n```js\n0.empty()\t/* => true */",
    "exampleBasic": "empty(0)",
    "link": "",
    "new": ""
  },
  {
    "name": "length",
    "id": 6,
    "type": "Functions",
    "description": "Returns the length of the text or list value.",
    "category": "Strings",
    "accepts": "String",
    "returns": "Number",
    "iconAccepts": "string.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "length(\"hello\")\t/* => 5 */\n```\n\n```js\n\"hello\".length()\t/* => 5 */",
    "exampleBasic": "length(\"hello\")",
    "link": "",
    "new": ""
  },
  {
    "name": "substring ",
    "id": 7,
    "type": "Functions",
    "description": "Returns the substring of the text from the start index (inclusive) to the end index (optional and exclusive).",
    "category": "Strings",
    "accepts": "String",
    "returns": "String",
    "iconAccepts": "string.svg",
    "iconReturns": "string.svg",
    "other": "",
    "examples": "substring(\"Notion\", 0, 3)\t/* => \"Not */\n```\n\n```js\n\"Not\".substring(0, 3)\t/* => \"Not\" */",
    "exampleBasic": "substring(\"Notion\", 0, 3)",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "contains",
    "id": 8,
    "type": "Functions",
    "description": "Returns true if the search string is present in the value.",
    "category": "Strings",
    "accepts": "String",
    "returns": "Boolean",
    "iconAccepts": "string.svg",
    "iconReturns": "boolean.svg",
    "other": "",
    "examples": "contains(\"Notion\", \"ot\")\t",
    "exampleBasic": "contains(\"Notion\", \"ot\")",
    "link": "",
    "new": ""
  },
  {
    "name": "test",
    "id": 9,
    "type": "Functions",
    "description": "Returns `true` if the value matches the regular expression and `false` otherwise.",
    "category": "Strings",
    "accepts": "String",
    "returns": "Boolean",
    "iconAccepts": "string.svg",
    "iconReturns": "boolean.svg",
    "other": "",
    "examples": "test(\"Notion\", \"Not\")\t",
    "exampleBasic": "test(\"Notion\", \"Not\")",
    "link": "",
    "new": ""
  },
  {
    "name": "match ",
    "id": 10,
    "type": "Functions",
    "description": "Returns all matches of the regular expression as a list.",
    "category": "Strings",
    "accepts": "String",
    "returns": "List",
    "iconAccepts": "string.svg",
    "iconReturns": "list.svg",
    "other": "",
    "examples": "match(\"Notion Notion\", \"Not\")\t",
    "exampleBasic": "match(\"Notion Notion\", \"Not\")",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "replace",
    "id": 11,
    "type": "Functions",
    "description": "Replaces the first match of the regular expression with the replacement value.",
    "category": "Strings",
    "accepts": "String",
    "returns": "String",
    "iconAccepts": "string.svg",
    "iconReturns": "string.svg",
    "other": "",
    "examples": "replace(\"Notion Notion\", \"N\", \"M\")\t",
    "exampleBasic": "replace(\"Notion Notion\", \"N\", \"M\")",
    "link": "",
    "new": ""
  },
  {
    "name": "replaceAll",
    "id": 12,
    "type": "Functions",
    "description": "Replaces all matches of the regular expression with the replacement value.",
    "category": "Strings",
    "accepts": "String",
    "returns": "String",
    "iconAccepts": "string.svg",
    "iconReturns": "string.svg",
    "other": "",
    "examples": "replaceAll(\"Notion Notion\", \"N\", \"M\")\t",
    "exampleBasic": "replaceAll(\"Notion Notion\", \"N\", \"M\")",
    "link": "",
    "new": ""
  },
  {
    "name": "lower ",
    "id": 13,
    "type": "Functions",
    "description": "Converts the text to lowercase.",
    "category": "Strings",
    "accepts": "String",
    "returns": "String",
    "iconAccepts": "string.svg",
    "iconReturns": "string.svg",
    "other": "",
    "examples": "lower(\"NOTION\")\t",
    "exampleBasic": "lower(\"NOTION\")",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "upper ",
    "id": 14,
    "type": "Functions",
    "description": "Converts the text to uppercase.",
    "category": "Strings",
    "accepts": "String",
    "returns": "String",
    "iconAccepts": "string.svg",
    "iconReturns": "string.svg",
    "other": "",
    "examples": "upper(\"notion\")\t",
    "exampleBasic": "upper(\"notion\")",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "repeat",
    "id": 15,
    "type": "Functions",
    "description": "Repeats the text a given number of times.",
    "category": "Strings",
    "accepts": "String",
    "returns": "String",
    "iconAccepts": "string.svg",
    "iconReturns": "string.svg",
    "other": "",
    "examples": "repeat(\"0\", 4)\t",
    "exampleBasic": "repeat(\"0\", 4)",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "link ",
    "id": 16,
    "type": "Functions",
    "description": "Creates a hyperlink from the label text and the URL.",
    "category": "Strings",
    "accepts": "String",
    "returns": "String",
    "iconAccepts": "string.svg",
    "iconReturns": "string.svg",
    "other": "",
    "examples": "link(\"Notion\", \"https://notion.so\")\t",
    "exampleBasic": "link(\"Notion\", \"https://notion.so\")",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "style",
    "id": 17,
    "type": "Functions",
    "description": "Adds styles and colors to the text. Valid formatting styles: \"b\" (bold), \"u\" (underline), \"i\" (italics), \"c\" (code), or \"s\" (strikethrough). Valid colors: \"gray\", \"brown\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\", \"pink\", and \"red\". Add \"_background\" to colors to set background colors.",
    "category": "Strings",
    "accepts": "String",
    "returns": "String",
    "iconAccepts": "string.svg",
    "iconReturns": "string.svg",
    "other": "",
    "examples": "style(\"Notion\", \"b\", \"u\")\t",
    "exampleBasic": "style(\"Notion\", \"b\", \"u\")",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "unstyle ",
    "id": 18,
    "type": "Functions",
    "description": "Removes formatting styles from the text. If no styles are specified, all styles are removed.",
    "category": "Strings",
    "accepts": "String",
    "returns": "String",
    "iconAccepts": "string.svg",
    "iconReturns": "string.svg",
    "other": "",
    "examples": "unstyle(\"Text\")\t",
    "exampleBasic": "unstyle(\"Text\")",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "format",
    "id": 19,
    "type": "Functions",
    "description": "Returns the value formatted as text.",
    "category": "Strings",
    "accepts": "All Data Types",
    "returns": "String",
    "iconAccepts": "various.svg",
    "iconReturns": "string.svg",
    "other": "",
    "examples": "format(1234)\t",
    "exampleBasic": "format(1234)",
    "link": "",
    "new": ""
  },
  {
    "name": "add",
    "id": 20,
    "type": "Functions",
    "description": "Returns the sum of two numbers.",
    "category": "Numbers",
    "accepts": "String, Number",
    "returns": "String, Number",
    "iconAccepts": "various.svg",
    "iconReturns": "various.svg",
    "other": "+",
    "examples": "add(5, 10)\t/* => 15 */\n```\n\n```js\n5.add(10)\t/* => 15 */",
    "exampleBasic": "add(5, 10)",
    "link": "",
    "new": ""
  },
  {
    "name": "subtract",
    "id": 21,
    "type": "Functions",
    "description": "Returns the difference of two numbers.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "-",
    "examples": "subtract(5, 10)\t",
    "exampleBasic": "subtract(5, 10)",
    "link": "",
    "new": ""
  },
  {
    "name": "multiply",
    "id": 22,
    "type": "Functions",
    "description": "Returns the product of two numbers.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "*",
    "examples": "multiply(5, 10)\t",
    "exampleBasic": "multiply(5, 10)",
    "link": "",
    "new": ""
  },
  {
    "name": "mod",
    "id": 23,
    "type": "Functions",
    "description": "Returns the first number modulo the second number.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "%",
    "examples": "mod(5, 10)\t",
    "exampleBasic": "mod(5, 10)",
    "link": "",
    "new": ""
  },
  {
    "name": "pow",
    "id": 24,
    "type": "Functions",
    "description": "Returns the result of a base number raised to an exponent power.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "^",
    "examples": "pow(5, 10)\t",
    "exampleBasic": "pow(5, 10)",
    "link": "",
    "new": ""
  },
  {
    "name": "divide",
    "id": 25,
    "type": "Functions",
    "description": "Returns the quotient of two numbers.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "/",
    "examples": "divide(5, 10)\t",
    "exampleBasic": "divide(5, 10)",
    "link": "",
    "new": ""
  },
  {
    "name": "min",
    "id": 26,
    "type": "Functions",
    "description": "Returns the smallest number of the arguments.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "min(1, 2, 3)\t",
    "exampleBasic": "min(1, 2, 3)",
    "link": "",
    "new": ""
  },
  {
    "name": "max",
    "id": 27,
    "type": "Functions",
    "description": "Returns the largest number of the arguments.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "max(1, 2, 3)\t",
    "exampleBasic": "max(1, 2, 3)",
    "link": "",
    "new": ""
  },
  {
    "name": "sum ",
    "id": 28,
    "type": "Functions",
    "description": "Returns the sum of its arguments.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "sum(1, 2, 3)\t",
    "exampleBasic": "sum(1, 2, 3)",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "abs",
    "id": 29,
    "type": "Functions",
    "description": "Returns the absolute value of the number.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "abs(10)\t/* => 10 */\n```\n\n```js\n10.abs()/* => 10 */",
    "exampleBasic": "abs(10)",
    "link": "",
    "new": ""
  },
  {
    "name": "round",
    "id": 30,
    "type": "Functions",
    "description": "Returns the value of a number rounded to the nearest integer.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "round(0.4)\t",
    "exampleBasic": "round(0.4)",
    "link": "",
    "new": ""
  },
  {
    "name": "ceil",
    "id": 31,
    "type": "Functions",
    "description": "Returns the smallest integer greater than or equal to the number.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "ceil(0.4)\t",
    "exampleBasic": "ceil(0.4)",
    "link": "",
    "new": ""
  },
  {
    "name": "floor",
    "id": 32,
    "type": "Functions",
    "description": "Returns the largest integer less than or equal to the number.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "floor(0.4)\t",
    "exampleBasic": "floor(0.4)",
    "link": "",
    "new": ""
  },
  {
    "name": "sqrt",
    "id": 33,
    "type": "Functions",
    "description": "Returns the positive square root of the number.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "sqrt(4)\t",
    "exampleBasic": "sqrt(4)",
    "link": "",
    "new": ""
  },
  {
    "name": "cbrt",
    "id": 34,
    "type": "Functions",
    "description": "Returns the cube root of the number.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "cbrt(9)\t",
    "exampleBasic": "cbrt(9)",
    "link": "",
    "new": ""
  },
  {
    "name": "exp",
    "id": 35,
    "type": "Functions",
    "description": "Returns e^x, where x is the argument, and e is Euler's number (2.718…), the base of the natural logarithm.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "exp(1)\t",
    "exampleBasic": "exp(1)",
    "link": "",
    "new": ""
  },
  {
    "name": "ln",
    "id": 36,
    "type": "Functions",
    "description": "Returns the natural logarithm of the number.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "ln(2.718281828459045)\t",
    "exampleBasic": "ln(2.718281828459045)",
    "link": "",
    "new": ""
  },
  {
    "name": "log10",
    "id": 37,
    "type": "Functions",
    "description": "Returns the base 10 logarithm of the number.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "log10(10)\t",
    "exampleBasic": "log10(10)",
    "link": "",
    "new": ""
  },
  {
    "name": "log2",
    "id": 38,
    "type": "Functions",
    "description": "Returns the base 2 logarithm of the number.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "log2(4)\t",
    "exampleBasic": "log2(4)",
    "link": "",
    "new": ""
  },
  {
    "name": "sign",
    "id": 39,
    "type": "Functions",
    "description": "Returns 1 if the number is positive, -1 if it is negative, and 0 if it is zero.",
    "category": "Numbers",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "sign(-10)\t",
    "exampleBasic": "sign(-10)",
    "link": "",
    "new": ""
  },
  {
    "name": "pi",
    "id": 40,
    "type": "Functions",
    "description": "Returns the ratio of a circle's circumference to its diameter.",
    "category": "Numbers",
    "accepts": "—",
    "returns": "Number",
    "iconAccepts": "",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "pi()\t",
    "exampleBasic": "pi()",
    "link": "",
    "new": ""
  },
  {
    "name": "e",
    "id": 41,
    "type": "Functions",
    "description": "Returns the base of the natural logarithm.",
    "category": "Numbers",
    "accepts": "—",
    "returns": "Number",
    "iconAccepts": "",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "e()\t",
    "exampleBasic": "e()",
    "link": "",
    "new": ""
  },
  {
    "name": "toNumber",
    "id": 42,
    "type": "Functions",
    "description": "Parses a number from text.",
    "category": "Numbers",
    "accepts": "String",
    "returns": "String",
    "iconAccepts": "string.svg",
    "iconReturns": "string.svg",
    "other": "",
    "examples": "toNumber(\"2\")\t",
    "exampleBasic": "toNumber(\"2\")",
    "link": "",
    "new": ""
  },
  {
    "name": "now",
    "id": 43,
    "type": "Functions",
    "description": "Returns the current date and time.",
    "category": "Dates",
    "accepts": "—",
    "returns": "Date",
    "iconAccepts": "",
    "iconReturns": "date.svg",
    "other": "",
    "examples": "now()\t",
    "exampleBasic": "now()",
    "link": "",
    "new": ""
  },
  {
    "name": "minute",
    "id": 44,
    "type": "Functions",
    "description": "Returns the minute of the date (0-59).",
    "category": "Dates",
    "accepts": "Date",
    "returns": "Number",
    "iconAccepts": "date.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "minute(parseDate(\"2023-07-10T17:35Z\"))\t",
    "exampleBasic": "minute(parseDate(\"2023-07-10T17:35Z\"))",
    "link": "",
    "new": ""
  },
  {
    "name": "hour",
    "id": 45,
    "type": "Functions",
    "description": "Returns the hour of the date (0-23).",
    "category": "Dates",
    "accepts": "Date",
    "returns": "Number",
    "iconAccepts": "date.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "hour(parseDate(\"2023-07-10T17:35Z\"))\t",
    "exampleBasic": "hour(parseDate(\"2023-07-10T17:35Z\"))",
    "link": "",
    "new": ""
  },
  {
    "name": "day",
    "id": 46,
    "type": "Functions",
    "description": "Returns the day of the week of the date, between 1 (Monday) and 7 (Sunday).",
    "category": "Dates",
    "accepts": "Date",
    "returns": "Number",
    "iconAccepts": "date.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "day(parseDate(\"2023-07-10T17:35Z\"))\t",
    "exampleBasic": "day(parseDate(\"2023-07-10T17:35Z\"))",
    "link": "",
    "new": ""
  },
  {
    "name": "date",
    "id": 47,
    "type": "Functions",
    "description": "Returns the day of the month from the date (1-31).",
    "category": "Dates",
    "accepts": "Date",
    "returns": "Number",
    "iconAccepts": "date.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "date(parseDate(\"2023-07-10T17:35Z\"))\t",
    "exampleBasic": "date(parseDate(\"2023-07-10T17:35Z\"))",
    "link": "",
    "new": ""
  },
  {
    "name": "week ",
    "id": 48,
    "type": "Functions",
    "description": "Returns the ISO week of the year of the date (1-53).",
    "category": "Dates",
    "accepts": "Date",
    "returns": "Number",
    "iconAccepts": "date.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "week(parseDate(\"2023-01-02\"))\t",
    "exampleBasic": "week(parseDate(\"2023-01-02\"))",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "month",
    "id": 49,
    "type": "Functions",
    "description": "Returns the month of the date (1-12).",
    "category": "Dates",
    "accepts": "Date",
    "returns": "Number",
    "iconAccepts": "date.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "month(parseDate(\"2023-07-10T17:35Z\"))\t",
    "exampleBasic": "month(parseDate(\"2023-07-10T17:35Z\"))",
    "link": "",
    "new": ""
  },
  {
    "name": "year",
    "id": 50,
    "type": "Functions",
    "description": "Returns the year of the date.",
    "category": "Dates",
    "accepts": "Date",
    "returns": "Number",
    "iconAccepts": "date.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "year(now())\t",
    "exampleBasic": "year(now())",
    "link": "",
    "new": ""
  },
  {
    "name": "dateAdd",
    "id": 51,
    "type": "Functions",
    "description": "Adds time to the date. The unit argument can be one of: \"years\", \"quarters\", \"months\", \"weeks\", \"days\", \"hours\", or \"minutes\".",
    "category": "Dates",
    "accepts": "Date",
    "returns": "Date",
    "iconAccepts": "date.svg",
    "iconReturns": "date.svg",
    "other": "",
    "examples": "dateAdd(now(), 1, \"days\")\t",
    "exampleBasic": "dateAdd(now(), 1, \"days\")",
    "link": "",
    "new": ""
  },
  {
    "name": "dateSubtract",
    "id": 52,
    "type": "Functions",
    "description": "Subtracts time from the date. The unit argument can be one of: \"years\", \"quarters\", \"months\", \"weeks\", \"days\", \"hours\", or \"minutes\".",
    "category": "Dates",
    "accepts": "Date",
    "returns": "Date",
    "iconAccepts": "date.svg",
    "iconReturns": "date.svg",
    "other": "",
    "examples": "dateSubtract(now(), 1, \"days\")\t",
    "exampleBasic": "dateSubtract(now(), 1, \"days\")",
    "link": "",
    "new": ""
  },
  {
    "name": "dateBetween",
    "id": 53,
    "type": "Functions",
    "description": "Returns the difference between two dates. The unit argument can be one of: \"years\", \"quarters\", \"months\", \"weeks\", \"days\", \"hours\", or \"minutes\".",
    "category": "Dates",
    "accepts": "Date",
    "returns": "Number",
    "iconAccepts": "date.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "dateBetween(now(), parseDate(\"2022-09-07\"), \"days\")\t",
    "exampleBasic": "dateBetween(now(), parseDate(\"2022-09-07\"), \"days\")",
    "link": "",
    "new": ""
  },
  {
    "name": "dateRange",
    "id": 54,
    "type": "Functions",
    "description": "Returns a date range constructed from the start and end dates.",
    "category": "Dates",
    "accepts": "Date",
    "returns": "Date",
    "iconAccepts": "date.svg",
    "iconReturns": "date.svg",
    "other": "",
    "examples": "dateRange(date, date)\t",
    "exampleBasic": "dateRange(date, date)",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "dateStart",
    "id": 55,
    "type": "Functions",
    "description": "Returns the start of the date range.",
    "category": "Dates",
    "accepts": "Date",
    "returns": "Date",
    "iconAccepts": "date.svg",
    "iconReturns": "date.svg",
    "other": "",
    "examples": "dateEnd(date)\t",
    "exampleBasic": "dateEnd(date)",
    "link": "",
    "new": ""
  },
  {
    "name": "dateEnd",
    "id": 56,
    "type": "Functions",
    "description": "Returns the end of the date range.",
    "category": "Dates",
    "accepts": "Date",
    "returns": "Date",
    "iconAccepts": "date.svg",
    "iconReturns": "date.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "timestamp",
    "id": 57,
    "type": "Functions",
    "description": "Returns the current Unix timestamp, representing the number of milliseconds that have elapsed since January 1, 1970.",
    "category": "Dates",
    "accepts": "Date",
    "returns": "Number",
    "iconAccepts": "date.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "fromTimestamp",
    "id": 58,
    "type": "Functions",
    "description": "Returns the date from the given Unix timestamp. The timestamp represents the number of milliseconds that have elapsed since January 1, 1970. Note: the returned date will not retain the seconds & milliseconds.",
    "category": "Dates",
    "accepts": "Number",
    "returns": "Date",
    "iconAccepts": "number.svg",
    "iconReturns": "date.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "formatDate",
    "id": 59,
    "type": "Functions",
    "description": "Formats the date using a custom format string. The format string can contain the following text to represent parts of the date: \"YYYY\" for year, \"MM\" for month, \"DD\" for day, \"HH\" for hour, \"mm\" for minute.",
    "category": "Dates",
    "accepts": "Date",
    "returns": "String",
    "iconAccepts": "date.svg",
    "iconReturns": "string.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "parseDate ",
    "id": 60,
    "type": "Functions",
    "description": "Returns the date parsed according to the ISO 8601 standard.",
    "category": "Dates",
    "accepts": "String",
    "returns": "Date",
    "iconAccepts": "string.svg",
    "iconReturns": "date.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "name ",
    "id": 61,
    "type": "Functions",
    "description": "Returns the name of a person.",
    "category": "People",
    "accepts": "Person",
    "returns": "String",
    "iconAccepts": "person.svg",
    "iconReturns": "string.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "email ",
    "id": 62,
    "type": "Functions",
    "description": "Returns the email address of a person.",
    "category": "People",
    "accepts": "Person",
    "returns": "String",
    "iconAccepts": "person.svg",
    "iconReturns": "string.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "at",
    "id": 63,
    "type": "Functions",
    "description": "Returns the value at the specified index in a list.",
    "category": "Lists",
    "accepts": "List",
    "returns": "All Data Types",
    "iconAccepts": "list.svg",
    "iconReturns": "various.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "first",
    "id": 64,
    "type": "Functions",
    "description": "Returns the first item in the list.",
    "category": "Lists",
    "accepts": "List",
    "returns": "All Data Types",
    "iconAccepts": "list.svg",
    "iconReturns": "various.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "last",
    "id": 65,
    "type": "Functions",
    "description": "Returns the last item in the list.",
    "category": "Lists",
    "accepts": "List",
    "returns": "All Data Types",
    "iconAccepts": "list.svg",
    "iconReturns": "various.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "slice",
    "id": 66,
    "type": "Functions",
    "description": "Returns the items of the list from the provided start index (inclusive) to the end index (optional and exclusive).",
    "category": "Lists",
    "accepts": "List",
    "returns": "List",
    "iconAccepts": "list.svg",
    "iconReturns": "list.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "concat",
    "id": 67,
    "type": "Functions",
    "description": "Returns the concatenation of multiple lists.",
    "category": "Lists",
    "accepts": "List",
    "returns": "List",
    "iconAccepts": "list.svg",
    "iconReturns": "list.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "sort",
    "id": 68,
    "type": "Functions",
    "description": "Returns the list in sorted order.",
    "category": "Lists",
    "accepts": "List",
    "returns": "List",
    "iconAccepts": "list.svg",
    "iconReturns": "list.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "reverse",
    "id": 69,
    "type": "Functions",
    "description": "Returns the reversed list.",
    "category": "Lists",
    "accepts": "List",
    "returns": "List",
    "iconAccepts": "list.svg",
    "iconReturns": "list.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "join",
    "id": 70,
    "type": "Functions",
    "description": "Returns the values of the list with the joiner placed between each of the values.",
    "category": "Lists",
    "accepts": "List",
    "returns": "String",
    "iconAccepts": "list.svg",
    "iconReturns": "string.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "split ",
    "id": 71,
    "type": "Functions",
    "description": "Returns the list of values created by splitting a text by a separator.",
    "category": "Lists",
    "accepts": "String",
    "returns": "List",
    "iconAccepts": "string.svg",
    "iconReturns": "list.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "unique",
    "id": 72,
    "type": "Functions",
    "description": "Returns the list of unique values in the input list.",
    "category": "Lists",
    "accepts": "List",
    "returns": "List",
    "iconAccepts": "list.svg",
    "iconReturns": "list.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "includes ",
    "id": 73,
    "type": "Functions",
    "description": "Returns true if the list contains the specified value, and false otherwise.",
    "category": "Lists",
    "accepts": "List",
    "returns": "Boolean",
    "iconAccepts": "list.svg",
    "iconReturns": "boolean.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "find",
    "id": 74,
    "type": "Functions",
    "description": "Returns the first element in the list for which the condition returns true.",
    "category": "Lists",
    "accepts": "List",
    "returns": "All Data Types",
    "iconAccepts": "list.svg",
    "iconReturns": "various.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "findIndex ",
    "id": 75,
    "type": "Functions",
    "description": "Returns the index of the first item in the list for which the condition evaluates to true.",
    "category": "Lists",
    "accepts": "List",
    "returns": "Number",
    "iconAccepts": "list.svg",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "filter",
    "id": 76,
    "type": "Functions",
    "description": "Returns the values in the list for which the condition is true.",
    "category": "Lists",
    "accepts": "List",
    "returns": "List",
    "iconAccepts": "list.svg",
    "iconReturns": "list.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "some ",
    "id": 77,
    "type": "Functions",
    "description": "Returns true if any item in the list satisfies the given condition, and false otherwise.",
    "category": "Lists",
    "accepts": "List",
    "returns": "Boolean",
    "iconAccepts": "list.svg",
    "iconReturns": "boolean.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "every",
    "id": 78,
    "type": "Functions",
    "description": "Returns true if every item in the list satisfies the given condition, and false otherwise.",
    "category": "Lists",
    "accepts": "List",
    "returns": "Boolean",
    "iconAccepts": "list.svg",
    "iconReturns": "boolean.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "map",
    "id": 79,
    "type": "Functions",
    "description": "Returns the list populated with the results of calling the expression on every item in the input list.",
    "category": "Lists",
    "accepts": "List",
    "returns": "List",
    "iconAccepts": "list.svg",
    "iconReturns": "list.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "flat",
    "id": 80,
    "type": "Functions",
    "description": "Flattens a list of lists into a single list.",
    "category": "Lists",
    "accepts": "List",
    "returns": "List",
    "iconAccepts": "list.svg",
    "iconReturns": "list.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "id",
    "id": 81,
    "type": "Functions",
    "description": "Returns the id of the page. If no page is provided, returns the id of the page the formula is on.",
    "category": "Pages",
    "accepts": "Page",
    "returns": "String",
    "iconAccepts": "page.svg",
    "iconReturns": "string.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "equal",
    "id": 82,
    "type": "Functions",
    "description": "Returns true if both values are equal and false otherwise.",
    "category": "Comparison",
    "accepts": "All Data Types",
    "returns": "Boolean",
    "iconAccepts": "various.svg",
    "iconReturns": "boolean.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "unequal",
    "id": 83,
    "type": "Functions",
    "description": "Returns false if both values are equal and true otherwise.",
    "category": "Comparison",
    "accepts": "All Data Types",
    "returns": "Boolean",
    "iconAccepts": "various.svg",
    "iconReturns": "boolean.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "let",
    "id": 84,
    "type": "Functions",
    "description": "Assigns a value to a variable and evaluates the expression using that variable.",
    "category": "Variables",
    "accepts": "All Data Types",
    "returns": "All Data Types",
    "iconAccepts": "various.svg",
    "iconReturns": "various.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "lets",
    "id": 85,
    "type": "Functions",
    "description": "Assigns values to multiple variables and evaluates the expression using those variables.",
    "category": "Variables",
    "accepts": "All Data Types",
    "returns": "All Data Types",
    "iconAccepts": "various.svg",
    "iconReturns": "various.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": "2.0"
  },
  {
    "name": "+",
    "id": 86,
    "type": "Operators",
    "description": "Adds two values together.",
    "category": "Mathematical",
    "accepts": "String, Number",
    "returns": "String, Number",
    "iconAccepts": "various.svg",
    "iconReturns": "various.svg",
    "other": "add",
    "examples": "3 + 2\t/* => 5 */",
    "exampleBasic": "3 + 2",
    "link": "",
    "new": ""
  },
  {
    "name": "-",
    "id": 87,
    "type": "Operators",
    "description": "Subtracts two numbers.",
    "category": "Mathematical",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "subtract",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "*",
    "id": 88,
    "type": "Operators",
    "description": "Multiplies two numbers.",
    "category": "Mathematical",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "multiply",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "%",
    "id": 89,
    "type": "Operators",
    "description": "Returns the first number modulo the second number.",
    "category": "Mathematical",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "mod",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "^",
    "id": 90,
    "type": "Operators",
    "description": "Returns the result of a base number raised to an exponent power.",
    "category": "Mathematical",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "pow",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "/",
    "id": 91,
    "type": "Operators",
    "description": "Divides two numbers.",
    "category": "Mathematical",
    "accepts": "Number",
    "returns": "Number",
    "iconAccepts": "number.svg",
    "iconReturns": "number.svg",
    "other": "divide",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "==",
    "id": 92,
    "type": "Operators",
    "description": "Checks if two values are equal.",
    "category": "Comparison",
    "accepts": "All Data Types",
    "returns": "Boolean",
    "iconAccepts": "various.svg",
    "iconReturns": "boolean.svg",
    "other": "equal",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "!=",
    "id": 93,
    "type": "Operators",
    "description": "Checks if two values are not equal.",
    "category": "Comparison",
    "accepts": "All Data Types",
    "returns": "Boolean",
    "iconAccepts": "various.svg",
    "iconReturns": "boolean.svg",
    "other": "unequal",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": ">",
    "id": 94,
    "type": "Operators",
    "description": "Checks if the first value is greater than the second.",
    "category": "Comparison",
    "accepts": "String, Number, Boolean, Date",
    "returns": "Boolean",
    "iconAccepts": "various.svg",
    "iconReturns": "boolean.svg",
    "other": "Greater than",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": ">=",
    "id": 95,
    "type": "Operators",
    "description": "Checks if the first value is greater than or equal to the second.",
    "category": "Comparison",
    "accepts": "String, Number, Boolean, Date",
    "returns": "Boolean",
    "iconAccepts": "various.svg",
    "iconReturns": "boolean.svg",
    "other": "Greater than or equal to",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "<",
    "id": 96,
    "type": "Operators",
    "description": "Checks if the first value is less than the second.",
    "category": "Comparison",
    "accepts": "String, Number, Boolean, Date",
    "returns": "Boolean",
    "iconAccepts": "various.svg",
    "iconReturns": "boolean.svg",
    "other": "Less than",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "<=",
    "id": 97,
    "type": "Operators",
    "description": "Checks if the first value is less than or equal to the second.",
    "category": "Comparison",
    "accepts": "String, Number, Boolean, Date",
    "returns": "Boolean",
    "iconAccepts": "various.svg",
    "iconReturns": "boolean.svg",
    "other": "Less than or equal to",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "&&  ·  and",
    "id": 98,
    "type": "Operators",
    "description": "The boolean operator and.",
    "category": "Logical",
    "accepts": "Boolean",
    "returns": "Boolean",
    "iconAccepts": "boolean.svg",
    "iconReturns": "boolean.svg",
    "other": "and",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "||  ·  or",
    "id": 99,
    "type": "Operators",
    "description": "The boolean operator or.",
    "category": "Logical",
    "accepts": "Boolean",
    "returns": "Boolean",
    "iconAccepts": "boolean.svg",
    "iconReturns": "boolean.svg",
    "other": "or",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "!  ·  not",
    "id": 100,
    "type": "Operators",
    "description": "Returns the opposite of a boolean value.",
    "category": "Logical",
    "accepts": "Boolean",
    "returns": "Boolean",
    "iconAccepts": "boolean.svg",
    "iconReturns": "boolean.svg",
    "other": "not",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "? :",
    "id": 101,
    "type": "Operators",
    "description": "The if ternary operator. Returns the first value if the condition is true. Otherwise, returns the second value.",
    "category": "Ternary",
    "accepts": "Boolean",
    "returns": "All Data Types",
    "iconAccepts": "boolean.svg",
    "iconReturns": "various.svg",
    "other": "if",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "true",
    "id": 102,
    "type": "Booleans",
    "description": "The boolean value true.",
    "category": "Value",
    "accepts": "—",
    "returns": "Boolean",
    "iconAccepts": "",
    "iconReturns": "boolean.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "false",
    "id": 103,
    "type": "Booleans",
    "description": "The boolean value false.",
    "category": "Value",
    "accepts": "—",
    "returns": "Boolean",
    "iconAccepts": "",
    "iconReturns": "boolean.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "current",
    "id": 104,
    "type": "Variables",
    "description": "Returns the value of the current item in the list function.",
    "category": "Value",
    "accepts": "—",
    "returns": "All Data Types",
    "iconAccepts": "",
    "iconReturns": "various.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  },
  {
    "name": "index",
    "id": 105,
    "type": "Variables",
    "description": "Returns the index of the current item in the list function, starting from 0.",
    "category": "Value",
    "accepts": "—",
    "returns": "Number",
    "iconAccepts": "",
    "iconReturns": "number.svg",
    "other": "",
    "examples": "",
    "exampleBasic": "",
    "link": "",
    "new": ""
  }
]